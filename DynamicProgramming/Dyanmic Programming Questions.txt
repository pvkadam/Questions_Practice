Dyanmic Programming Questions

1. Find the maximum sum in subarray (maximum sum continguous array) - EPI and Github
2. Count the number of score combinations (American football game) - EPI 
3. Calculate Levenshtein algorithm to find the minimum number of edits between two strings - EPI and Github
4. Count the number of ways to traverse a 2D array (same as calculate unique paths without obstacles) - EPI and Github
5. Compute binomial coefficients - EPI
6. Search for a sequence in a 2D array (given a 1D array) - EPI
7. Knapsack problem (weight and value) - EPI
8. BEDBATHANDBEYOND problem (given a dictionary, check whether a name is a concatenation of sequence of dictionary words) - EPI 
9. Find the minimum weight path in a triangle - EPI
10. Pick up coins for maximum gain (even number of coins in a line) - EPI
11. Count number of moves to climb up stairs - EPI and Github
12. The pretty printing problem (calculate the minimum messiness required) - EPI
13. Find the longest increasing subsequence (takes an array and returns the length of longest nondecreasing subsequence) - EPI and Github
14. Buy and sell a stock once, twice and n times - Github
15. Ways to decode: given a message, determine the number of ways it could be encoded: Github
16. Interleaving strings: given three strings, find whether s3 is formed by interleaving s1 and s2 - Github
17. Calculate the longest valid paranthesis - Github
18. Find maximum rectangle area in a binary matrix - Github
19. Find maximum sum without adjacent elements - Github
20. Find the maximum product sum array - Github
21. Find the minimum number of jumps to reach the last index (with given jumps at each index) - Github
22. Perform regular expression matching - Github
23. Find if two strings are scrambled or not (binary tree) - Github 
24. Given a binary tree, calculate how many unique binary search trees (BST) can be possible? - Github
25. Calculate total number of unique paths with obstacles - Github
26. Word break: Given a string s and a dictionary of words dict, determine if s can be segmented into a space-separated sequence of one or more dictionary words - Github
27. Word break: Given a string s and a dictionary of words dict, add spaces in s to construct a sentence where each word is a valid dictionary word. Return all such possible sentences - Github


